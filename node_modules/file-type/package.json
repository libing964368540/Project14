{
  "_args": [
    [
      {
        "raw": "file-type@^12.0.0",
        "scope": null,
        "escapedName": "file-type",
        "name": "file-type",
        "rawSpec": "^12.0.0",
        "spec": ">=12.0.0 <13.0.0",
        "type": "range"
      },
      "C:\\Users\\Administrator\\Desktop\\me\\web-gulp\\SHSSVIEW\\node_modules\\_imagemin@7.0.0@imagemin"
    ]
  ],
  "_cnpm_publish_time": 1572545901925,
  "_from": "file-type@^12.0.0",
  "_hasShrinkwrap": false,
  "_id": "file-type@12.4.0",
  "_location": "/file-type",
  "_nodeVersion": "10.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/file-type_12.4.0_1572545901718_0.813748770068317"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.12.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "file-type@^12.0.0",
    "scope": null,
    "escapedName": "file-type",
    "name": "file-type",
    "rawSpec": "^12.0.0",
    "spec": ">=12.0.0 <13.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/imagemin"
  ],
  "_resolved": "https://registry.npm.taobao.org/file-type/download/file-type-12.4.0.tgz",
  "_shasum": "a9a399459e1940d9f34b3973039958f1f36a565e",
  "_shrinkwrap": null,
  "_spec": "file-type@^12.0.0",
  "_where": "C:\\Users\\Administrator\\Desktop\\me\\web-gulp\\SHSSVIEW\\node_modules\\_imagemin@7.0.0@imagemin",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/file-type/issues"
  },
  "dependencies": {},
  "description": "Detect the file type of a Buffer/Uint8Array/ArrayBuffer",
  "devDependencies": {
    "@types/node": "^12.7.2",
    "ava": "^2.3.0",
    "noop-stream": "^0.1.0",
    "pify": "^4.0.1",
    "read-chunk": "^3.2.0",
    "tsd": "^0.7.1",
    "xo": "^0.24.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a9a399459e1940d9f34b3973039958f1f36a565e",
    "size": 14802,
    "noattachment": false,
    "tarball": "https://registry.npm.taobao.org/file-type/download/file-type-12.4.0.tgz"
  },
  "engines": {
    "node": ">=8"
  },
  "files": [
    "index.js",
    "index.d.ts",
    "supported.js",
    "util.js"
  ],
  "gitHead": "7d9406e45c83339e58fe240595f0da87f8982332",
  "homepage": "https://github.com/sindresorhus/file-type#readme",
  "keywords": [
    "mime",
    "file",
    "type",
    "archive",
    "image",
    "img",
    "pic",
    "picture",
    "flash",
    "photo",
    "video",
    "detect",
    "check",
    "is",
    "exif",
    "exe",
    "binary",
    "buffer",
    "uint8array",
    "jpg",
    "png",
    "apng",
    "gif",
    "webp",
    "flif",
    "cr2",
    "orf",
    "arw",
    "dng",
    "nef",
    "rw2",
    "raf",
    "tif",
    "bmp",
    "jxr",
    "psd",
    "zip",
    "tar",
    "rar",
    "gz",
    "bz2",
    "7z",
    "dmg",
    "mp4",
    "mid",
    "mkv",
    "webm",
    "mov",
    "avi",
    "mpg",
    "mp2",
    "mp3",
    "m4a",
    "ogg",
    "opus",
    "flac",
    "wav",
    "amr",
    "pdf",
    "epub",
    "mobi",
    "swf",
    "rtf",
    "woff",
    "woff2",
    "eot",
    "ttf",
    "otf",
    "ico",
    "flv",
    "ps",
    "xz",
    "sqlite",
    "xpi",
    "cab",
    "deb",
    "ar",
    "rpm",
    "Z",
    "lz",
    "msi",
    "mxf",
    "mts",
    "wasm",
    "webassembly",
    "blend",
    "bpg",
    "docx",
    "pptx",
    "xlsx",
    "3gp",
    "jp2",
    "jpm",
    "jpx",
    "mj2",
    "aif",
    "odt",
    "ods",
    "odp",
    "xml",
    "heic",
    "wma",
    "ics",
    "glb",
    "pcap",
    "dsf",
    "lnk",
    "alias",
    "voc",
    "ac3",
    "3g2",
    "m4b",
    "m4p",
    "m4v",
    "f4a",
    "f4b",
    "f4p",
    "f4v",
    "mie",
    "qcp",
    "wmv",
    "asf",
    "ogv",
    "ogm",
    "oga",
    "spx",
    "ogx",
    "ape",
    "wv",
    "cur",
    "nes",
    "crx",
    "ktx",
    "dcm",
    "mpc",
    "arrow",
    "shp"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "mifi",
      "email": "finstaden@gmail.com"
    },
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "file-type",
  "optionalDependencies": {},
  "publish_time": 1572545901925,
  "readme": "# file-type [![Build Status](https://travis-ci.org/sindresorhus/file-type.svg?branch=master)](https://travis-ci.org/sindresorhus/file-type)\n\n> Detect the file type of a Buffer/Uint8Array/ArrayBuffer\n\nThe file type is detected by checking the [magic number](https://en.wikipedia.org/wiki/Magic_number_(programming)#Magic_numbers_in_files) of the buffer.\n\n\n## Install\n\n```\n$ npm install file-type\n```\n\n\n## Usage\n\n##### Node.js\n\n```js\nconst readChunk = require('read-chunk');\nconst fileType = require('file-type');\n\nconst buffer = readChunk.sync('unicorn.png', 0, fileType.minimumBytes);\n\nfileType(buffer);\n//=> {ext: 'png', mime: 'image/png'}\n```\n\nOr from a remote location:\n\n```js\nconst http = require('http');\nconst fileType = require('file-type');\n\nconst url = 'https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif';\n\nhttp.get(url, response => {\n\tresponse.on('readable', () => {\n\t\tconst chunk = response.read(fileType.minimumBytes);\n\t\tresponse.destroy();\n\n\t\tconsole.log(fileType(chunk));\n\t\t//=> {ext: 'gif', mime: 'image/gif'}\n\t});\n});\n```\n\nOr from a stream:\n\n```js\nconst stream = require('stream');\nconst fs = require('fs');\nconst crypto = require('crypto');\nconst fileType = require('file-type');\n\n(async () => {\n\tconst read = fs.createReadStream('encrypted.enc');\n\tconst decipher = crypto.createDecipheriv(alg, key, iv);\n\n\tconst fileTypeStream = await fileType.stream(stream.pipeline(read, decipher));\n\n\tconsole.log(fileTypeStream.fileType);\n\t//=> {ext: 'mov', mime: 'video/quicktime'}\n\n\tconst write = fs.createWriteStream(`decrypted.${fileTypeStream.fileType.ext}`);\n\tfileTypeStream.pipe(write);\n})();\n```\n\n\n##### Browser\n\n```js\nconst xhr = new XMLHttpRequest();\nxhr.open('GET', 'unicorn.png');\nxhr.responseType = 'arraybuffer';\n\nxhr.onload = () => {\n\tfileType(new Uint8Array(this.response));\n\t//=> {ext: 'png', mime: 'image/png'}\n};\n\nxhr.send();\n```\n\n\n## API\n\n### fileType(input)\n\nReturns an `object` with:\n\n- `ext` - One of the [supported file types](#supported-file-types)\n- `mime` - The [MIME type](https://en.wikipedia.org/wiki/Internet_media_type)\n\nOr `undefined` when there is no match.\n\n#### input\n\nType: `Buffer | Uint8Array | ArrayBuffer`\n\nIt only needs the first `.minimumBytes` bytes. The exception is detection of `docx`, `pptx`, and `xlsx` which potentially requires reading the whole file.\n\n### fileType.minimumBytes\n\nType: `number`\n\nThe minimum amount of bytes needed to detect a file type. Currently, it's 4100 bytes, but it can change, so don't hardcode it.\n\n### fileType.stream(readableStream)\n\nDetect the file type of a readable stream.\n\nReturns a `Promise` which resolves to the original readable stream argument, but with an added `fileType` property, which is an object like the one returned from `fileType()`.\n\n*Note:* This method is only for Node.js.\n\n#### readableStream\n\nType: [`stream.Readable`](https://nodejs.org/api/stream.html#stream_class_stream_readable)\n\n### fileType.extensions\n\nReturns a set of supported file extensions.\n\n### fileType.mimeTypes\n\nReturns a set of supported MIME types.\n\n\n## Supported file types\n\n- [`jpg`](https://en.wikipedia.org/wiki/JPEG)\n- [`png`](https://en.wikipedia.org/wiki/Portable_Network_Graphics)\n- [`apng`](https://en.wikipedia.org/wiki/APNG) - Animated Portable Network Graphics\n- [`gif`](https://en.wikipedia.org/wiki/GIF)\n- [`webp`](https://en.wikipedia.org/wiki/WebP)\n- [`flif`](https://en.wikipedia.org/wiki/Free_Lossless_Image_Format)\n- [`cr2`](https://fileinfo.com/extension/cr2) - Canon Raw image file (v2)\n- [`orf`](https://en.wikipedia.org/wiki/ORF_format) - Olympus Raw image file\n- [`arw`](https://en.wikipedia.org/wiki/Raw_image_format#ARW) - Sony Alpha Raw image file\n- [`dng`](https://en.wikipedia.org/wiki/Digital_Negative) - Adobe Digital Negative image file\n- [`nef`](https://www.nikonusa.com/en/learn-and-explore/a/products-and-innovation/nikon-electronic-format-nef.html) - Nikon Electronic Format image file\n- [`rw2`](https://en.wikipedia.org/wiki/Raw_image_format) - Panasonic RAW image file\n- [`raf`](https://en.wikipedia.org/wiki/Raw_image_format) - Fujifilm RAW image file\n- [`tif`](https://en.wikipedia.org/wiki/Tagged_Image_File_Format)\n- [`bmp`](https://en.wikipedia.org/wiki/BMP_file_format)\n- [`jxr`](https://en.wikipedia.org/wiki/JPEG_XR)\n- [`psd`](https://en.wikipedia.org/wiki/Adobe_Photoshop#File_format)\n- [`zip`](https://en.wikipedia.org/wiki/Zip_(file_format))\n- [`tar`](https://en.wikipedia.org/wiki/Tar_(computing)#File_format)\n- [`rar`](https://en.wikipedia.org/wiki/RAR_(file_format))\n- [`gz`](https://en.wikipedia.org/wiki/Gzip)\n- [`bz2`](https://en.wikipedia.org/wiki/Bzip2)\n- [`7z`](https://en.wikipedia.org/wiki/7z)\n- [`dmg`](https://en.wikipedia.org/wiki/Apple_Disk_Image)\n- [`mp4`](https://en.wikipedia.org/wiki/MPEG-4_Part_14#Filename_extensions)\n- [`mid`](https://en.wikipedia.org/wiki/MIDI)\n- [`mkv`](https://en.wikipedia.org/wiki/Matroska)\n- [`webm`](https://en.wikipedia.org/wiki/WebM)\n- [`mov`](https://en.wikipedia.org/wiki/QuickTime_File_Format)\n- [`avi`](https://en.wikipedia.org/wiki/Audio_Video_Interleave)\n- [`mpg`](https://en.wikipedia.org/wiki/MPEG-1)\n- [`mp2`](https://en.wikipedia.org/wiki/MPEG-1_Audio_Layer_II)\n- [`mp3`](https://en.wikipedia.org/wiki/MP3)\n- [`ogg`](https://en.wikipedia.org/wiki/Ogg)\n- [`ogv`](https://en.wikipedia.org/wiki/Ogg)\n- [`ogm`](https://en.wikipedia.org/wiki/Ogg)\n- [`oga`](https://en.wikipedia.org/wiki/Ogg)\n- [`spx`](https://en.wikipedia.org/wiki/Ogg)\n- [`ogx`](https://en.wikipedia.org/wiki/Ogg)\n- [`opus`](https://en.wikipedia.org/wiki/Opus_(audio_format))\n- [`flac`](https://en.wikipedia.org/wiki/FLAC)\n- [`wav`](https://en.wikipedia.org/wiki/WAV)\n- [`qcp`](https://en.wikipedia.org/wiki/QCP)\n- [`amr`](https://en.wikipedia.org/wiki/Adaptive_Multi-Rate_audio_codec)\n- [`pdf`](https://en.wikipedia.org/wiki/Portable_Document_Format)\n- [`epub`](https://en.wikipedia.org/wiki/EPUB)\n- [`mobi`](https://en.wikipedia.org/wiki/Mobipocket) - Mobipocket\n- [`exe`](https://en.wikipedia.org/wiki/.exe)\n- [`swf`](https://en.wikipedia.org/wiki/SWF)\n- [`rtf`](https://en.wikipedia.org/wiki/Rich_Text_Format)\n- [`woff`](https://en.wikipedia.org/wiki/Web_Open_Font_Format)\n- [`woff2`](https://en.wikipedia.org/wiki/Web_Open_Font_Format)\n- [`eot`](https://en.wikipedia.org/wiki/Embedded_OpenType)\n- [`ttf`](https://en.wikipedia.org/wiki/TrueType)\n- [`otf`](https://en.wikipedia.org/wiki/OpenType)\n- [`ico`](https://en.wikipedia.org/wiki/ICO_(file_format))\n- [`flv`](https://en.wikipedia.org/wiki/Flash_Video)\n- [`ps`](https://en.wikipedia.org/wiki/Postscript)\n- [`xz`](https://en.wikipedia.org/wiki/Xz)\n- [`sqlite`](https://www.sqlite.org/fileformat2.html)\n- [`nes`](https://fileinfo.com/extension/nes)\n- [`crx`](https://developer.chrome.com/extensions/crx)\n- [`xpi`](https://en.wikipedia.org/wiki/XPInstall)\n- [`cab`](https://en.wikipedia.org/wiki/Cabinet_(file_format))\n- [`deb`](https://en.wikipedia.org/wiki/Deb_(file_format))\n- [`ar`](https://en.wikipedia.org/wiki/Ar_(Unix))\n- [`rpm`](https://fileinfo.com/extension/rpm)\n- [`Z`](https://fileinfo.com/extension/z)\n- [`lz`](https://en.wikipedia.org/wiki/Lzip)\n- [`msi`](https://en.wikipedia.org/wiki/Windows_Installer)\n- [`mxf`](https://en.wikipedia.org/wiki/Material_Exchange_Format)\n- [`mts`](https://en.wikipedia.org/wiki/.m2ts)\n- [`wasm`](https://en.wikipedia.org/wiki/WebAssembly)\n- [`blend`](https://wiki.blender.org/index.php/Dev:Source/Architecture/File_Format)\n- [`bpg`](https://bellard.org/bpg/)\n- [`docx`](https://en.wikipedia.org/wiki/Office_Open_XML)\n- [`pptx`](https://en.wikipedia.org/wiki/Office_Open_XML)\n- [`xlsx`](https://en.wikipedia.org/wiki/Office_Open_XML)\n- [`jp2`](https://en.wikipedia.org/wiki/JPEG_2000) - JPEG 2000\n- [`jpm`](https://en.wikipedia.org/wiki/JPEG_2000) - JPEG 2000\n- [`jpx`](https://en.wikipedia.org/wiki/JPEG_2000) - JPEG 2000\n- [`mj2`](https://en.wikipedia.org/wiki/Motion_JPEG_2000) - Motion JPEG 2000\n- [`aif`](https://en.wikipedia.org/wiki/Audio_Interchange_File_Format)\n- [`odt`](https://en.wikipedia.org/wiki/OpenDocument) - OpenDocument for word processing\n- [`ods`](https://en.wikipedia.org/wiki/OpenDocument) - OpenDocument for spreadsheets\n- [`odp`](https://en.wikipedia.org/wiki/OpenDocument) - OpenDocument for presentations\n- [`xml`](https://en.wikipedia.org/wiki/XML)\n- [`heic`](https://nokiatech.github.io/heif/technical.html)\n- [`cur`](https://en.wikipedia.org/wiki/ICO_(file_format))\n- [`ktx`](https://www.khronos.org/opengles/sdk/tools/KTX/file_format_spec/)\n- [`ape`](https://en.wikipedia.org/wiki/Monkey%27s_Audio) - Monkey's Audio\n- [`wv`](https://en.wikipedia.org/wiki/WavPack) - WavPack\n- [`asf`](https://en.wikipedia.org/wiki/Advanced_Systems_Format) - Advanced Systems Format\n- [`wma`](https://en.wikipedia.org/wiki/Windows_Media_Audio) - Windows Media Audio\n- [`wmv`](https://en.wikipedia.org/wiki/Windows_Media_Video) - Windows Media Video\n- [`dcm`](https://en.wikipedia.org/wiki/DICOM#Data_format) - DICOM Image File\n- [`mpc`](https://en.wikipedia.org/wiki/Musepack) - Musepack (SV7 & SV8)\n- [`ics`](https://en.wikipedia.org/wiki/ICalendar#Data_format) - iCalendar\n- [`glb`](https://github.com/KhronosGroup/glTF) - GL Transmission Format\n- [`pcap`](https://wiki.wireshark.org/Development/LibpcapFileFormat) - Libpcap File Format\n- [`dsf`](https://dsd-guide.com/sites/default/files/white-papers/DSFFileFormatSpec_E.pdf) - Sony DSD Stream File (DSF)\n- [`lnk`](https://en.wikipedia.org/wiki/Shortcut_%28computing%29#Microsoft_Windows) - Microsoft Windows file shortcut\n- [`alias`](https://en.wikipedia.org/wiki/Alias_%28Mac_OS%29) - macOS Alias file\n- [`voc`](https://wiki.multimedia.cx/index.php/Creative_Voice) - Creative Voice File\n- [`ac3`](https://www.atsc.org/standard/a522012-digital-audio-compression-ac-3-e-ac-3-standard-12172012/) - ATSC A/52 Audio File\n- [`3gp`](https://en.wikipedia.org/wiki/3GP_and_3G2#3GP) - Multimedia container format defined by the Third Generation Partnership Project (3GPP) for 3G UMTS multimedia services\n- [`3g2`](https://en.wikipedia.org/wiki/3GP_and_3G2#3G2) - Multimedia container format defined by the 3GPP2 for 3G CDMA2000 multimedia services\n- [`m4v`](https://en.wikipedia.org/wiki/M4V) -  MPEG-4 Visual bitstreams\n- [`m4p`](https://en.wikipedia.org/wiki/MPEG-4_Part_14#Filename_extensions) - MPEG-4 files with audio streams encrypted by FairPlay Digital Rights Management as were sold through the iTunes Store\n- [`m4a`](https://en.wikipedia.org/wiki/M4A) - Audio-only MPEG-4 files\n- [`m4b`](https://en.wikipedia.org/wiki/M4B) - Audiobook and podcast MPEG-4 files, which also contain metadata including chapter markers, images, and hyperlinks\n- [`f4v`](https://en.wikipedia.org/wiki/Flash_Video) - ISO base media file format used by Adobe Flash Player\n- [`f4p`](https://en.wikipedia.org/wiki/Flash_Video) - ISO base media file format protected by Adobe Access DRM used by Adobe Flash Player\n- [`f4a`](https://en.wikipedia.org/wiki/Flash_Video) - Audio-only ISO base media file format used by Adobe Flash Player\n- [`f4b`](https://en.wikipedia.org/wiki/Flash_Video) - Audiobook and podcast ISO base media file format used by Adobe Flash Player\n- [`mie`](https://en.wikipedia.org/wiki/Sidecar_file) - Dedicated meta information format which supports storage of binary as well as textual meta information\n- [`shp`](https://en.wikipedia.org/wiki/Shapefile) - Geospatial vector data format\n- [`arrow`](https://arrow.apache.org) - Columnar format for tables of data\n\n*SVG isn't included as it requires the whole file to be read, but you can get it [here](https://github.com/sindresorhus/is-svg).*\n\n*Pull requests are welcome for additional commonly used file types, except for `doc`, `xls`, `ppt`.*\n\n\n## file-type for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of file-type and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-file-type?utm_source=npm-file-type&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n\n## Related\n\n- [file-type-cli](https://github.com/sindresorhus/file-type-cli) - CLI for this module\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Mikael Finstad](https://github.com/mifi)\n- [Ben Brook](https://github.com/bencmbrook)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/file-type.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "12.4.0"
}
